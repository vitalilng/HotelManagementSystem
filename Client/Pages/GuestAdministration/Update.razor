@page "/guest/update/{guestId}"
@inject HttpClient httpClient
@inject NavigationManager uriHelper
@inject IJSRuntime js
@inject ISnackbar snackBar
@attribute [Authorize(Roles = "admin")]

<h3>Update Guest Personal Information</h3>

<Form ButtonText="Update" registrationModel="@registrationModel"
          OnValidSubmit="@UpdateGuest" />
<MudAlert Severity="Severity.Success">Updated succesfuly</MudAlert>

@code {
    [Parameter] public string? guestId { get; set; }    
    UserDetailsDto registrationModel = new UserDetailsDto();

    protected async override Task OnParametersSetAsync()
    {       
        registrationModel = await httpClient.GetFromJsonAsync<UserDetailsDto>($"api/guestusers/{guestId}");
    }
    async Task UpdateGuest()
    {
        await httpClient.PutAsJsonAsync($"api/guestusers/{guestId}", registrationModel);
        await js.InvokeVoidAsync("alert", $"Updated Successfully!");        
        uriHelper.NavigateTo("guests");
    }
}