@page "/register"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registrationModel">
<DataAnnotationsValidator />
<MudGrid>
    <MudItem xs="6">
        <MudCard Outlined="true">
            <MudCardContent>
                    <MudText Typo="Typo.h1">Create New Account:</MudText>

                    <MudTextField Label="FullName" HelperText="Max. 15 characters"
                                  @bind-Value="registrationModel.FullName"
                                  For="@(() => registrationModel.FullName)"
                                  Immediate="true" 
                                  Variant="Variant.Filled" />

                    <MudTextField Label="Email" Class="mt-3"
                                  @bind-Value="registrationModel.Email" 
                                  For="@(() => registrationModel.Email)" 
                                  Immediate="true" 
                                  Variant="Variant.Filled" />

                    <MudTextField Label="Username" HelperText="Max. 8 characters"
                                  @bind-Value="registrationModel.UserName"
                                  For="@(() => registrationModel.UserName)" 
                                  Immediate="true" 
                                  Variant="Variant.Filled" />

                    <MudTextField Label="Phone Number" HelperText="Max. 15 characters"
                                  @bind-Value="registrationModel.PhoneNumber"
                                  For="@(() => registrationModel.PhoneNumber)" 
                                  Immediate="true" 
                                  Variant="Variant.Filled" />

                    <MudTextField Label="Country" @bind-Value="registrationModel.Country"
                                  For="@(() => registrationModel.Country)"
                                  Immediate="true" 
                                  Variant="Variant.Filled" />

                    <MudTextField Label="Password" HelperText="Choose a strong password" Class="mt-3"
                                  @bind-Value="registrationModel.Password"
                                  For="@(() => registrationModel.Password)"
                                  InputType="@PasswordInput" Immediate="true"
                                  Variant="Variant.Filled" 
                                  Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" 
                                  OnAdornmentClick="ButtonTestClick" 
                                  AdornmentAriaLabel="Show Password"/>

                    <MudTextField Label="Confirm Password" HelperText="Repeat the password" Class="mt-3"
                                  @bind-Value="registrationModel.PasswordConfirm"
                                  For="@(() => registrationModel.PasswordConfirm)"
                                  InputType="@PasswordInput" Immediate="true"
                                  Variant="Variant.Filled" 
                                  Adornment="Adornment.End" 
                                  AdornmentIcon="@PasswordInputIcon" 
                                  OnAdornmentClick="ButtonTestClick" 
                                  AdornmentAriaLabel="Show Password" />                
            </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Register</MudButton>
                </MudCardActions>
        </MudCard>
    </MudItem>
    <MudItem xs="6">
        <MudPaper Class="pa-4 mud-height-full">               
            @if (!success)          
            {
                <MudText Color="@Color.Error">
                    <ValidationSummary />
                </MudText>
            }
        </MudPaper>
    </MudItem>
    <MudItem xs="6">
            <MudText Typo="Typo.h6">Already have an account?</MudText>
            <MudLink Href="login" Typo="Typo.h1">Go To Login</MudLink>
    </MudItem>
</MudGrid>   
</EditForm>

@code {
    UserDetailsDto registrationModel { get; set; } = new UserDetailsDto();
    string? error { get; set; }
    bool success;
    
    /// <summary>
    /// password visibility icon
    /// </summary>
    bool isShow;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void ButtonTestClick()
    {
        if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registrationModel);
            navigationManager.NavigateTo("login");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}