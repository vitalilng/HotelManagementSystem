@page "/register"
@layout AuthLayout
@inject NavigationManager navigationManager
@inject CustomStateProvider authStateProvider

<h1 class="h2 font-weight-normal login-title">
    Register new account:    
</h1>
<br />

<EditForm class="form-signin" OnValidSubmit="OnSubmit" Model="registrationModel">
    <DataAnnotationsValidator />

    <label for="inputFullname" class="sr-only" style="font-weight:bold" >FullName</label>
    <InputText id="inputFullname" class="form-control w-25" placeholder="FullName" autofocus @bind-Value="@registrationModel.FullName" />
    <ValidationMessage For="@(() => registrationModel.FullName)" />
    <p></p>
    <label for="inputUserName" class="sr-only" style="font-weight:bold">UserName</label>
    <InputText id="inputUserName" class="form-control w-25" placeholder="UserName" autofocus @bind-Value="@registrationModel.UserName" />
    <ValidationMessage For="@(() => registrationModel.UserName)" />
    <p></p>
    <label for="inputEmail" class="sr-only" style="font-weight:bold">Email</label>
    <InputText id="inputEmail" class="form-control w-25" placeholder="Email" autofocus @bind-Value="@registrationModel.Email" />
    <ValidationMessage For="@(() => registrationModel.Email)" />
    <p></p>
    <label for="inputPhoneNumber" class="sr-only" style="font-weight:bold">Phone Number</label>
    <InputText id="inputPhoneNumber" class="form-control w-25" placeholder="Phone Number" autofocus @bind-Value="@registrationModel.PhoneNumber" />
    <ValidationMessage For="@(() => registrationModel.PhoneNumber)" />
    <p></p>
    <label for="inputCountry" class="sr-only" style="font-weight:bold">Country</label>
    <InputText id="inputCountry" class="form-control w-25" placeholder="Country" autofocus @bind-Value="@registrationModel.Country" />
    <ValidationMessage For="@(() => registrationModel.Country)" />
    <p></p>
    <label for="inputPassword" class="sr-only" style="font-weight:bold">Password</label>
    <InputText type="password" id="inputPassword" class="form-control w-25" placeholder="Password" @bind-Value="@registrationModel.Password" />
    <ValidationMessage For="@(() => registrationModel.Password)" />
    <p></p>
    <label for="inputPasswordConfirm" class="sr-only" style="font-weight:bold">Password Confirmation</label>
    <InputText type="password" id="inputPasswordConfirm" class="form-control w-25" placeholder="Password Confirmation" @bind-Value="@registrationModel.PasswordConfirm" />
    <ValidationMessage For="@(() => registrationModel.PasswordConfirm)" />
    <br />
    <button class="btn btn-lg btn-primary btn-block" type="submit">Create account</button>
    
    <label class="text-danger">@error</label>
    <NavLink href="login">
        <h6 class="font-weight-normal text-center">Already have an account? Click here to login</h6>
    </NavLink>
</EditForm>

@functions {
    RegistrationDto registrationModel { get; set; } = new RegistrationDto();
    string? error { get; set; }

    async Task OnSubmit()
    {
        error = null;
        try
        {
            await authStateProvider.Register(registrationModel);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
    }
}