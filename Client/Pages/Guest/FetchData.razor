@page "/guests"
@inject HttpClient httpClient
@inject IJSRuntime js
@attribute [Authorize(Roles="admin")]

<h3>Guests</h3>
<div class="form-group">
    <a class="btn btn-success" href="guest/create"><i class="oi oi-plus"></i>Add new guest</a>
</div>
<br />

@if (registeredGuests == null)
{
    <text>Loading ...</text>
}
else if(registeredGuests.Length == 0)
{
    <text>No Records found.</text>
}
else
{
    <table class="table table-success">
        <thead class="">
            <tr>                
                <th>FullName</th>
                <th>Username</th>
                <th>Email</th>
                <th>Phone Number</th>
                <th>Country</th>                
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (RegistrationDto registeredGuest in registeredGuests)
            {
                <tr>                    
                    <th>@registeredGuest.FullName</th>
                    <th>@registeredGuest.UserName</th>
                    <th>@registeredGuest.Email</th>
                    <th>@registeredGuest.PhoneNumber</th>
                    <th>@registeredGuest.Country</th>                    
                    <th>
                        <a class="btn btn-sm btn-success" href="guest/update/@registeredGuest.Id">Update</a>                        
                        <button type="submit" class="btn btn-sm btn-danger" @onclick="@(() => DeleteGuest(registeredGuest.Id))">Delete</button>
                    </th>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    RegistrationDto[]? registeredGuests { get; set; }
    protected override async Task OnInitializedAsync()
    {
        registeredGuests = await httpClient.GetFromJsonAsync<RegistrationDto[]>("api/guests");
    }

    async Task DeleteGuest(string? guestId)
    {
        if (registeredGuests is not null && guestId != null)
        {
            var guestUser = registeredGuests.First(x => x.Id == guestId);
            if (await js.InvokeAsync<bool>("confirm", $"Do you want to delete {guestUser.UserName}'s  Record ?"))
            {
                await httpClient.DeleteAsync($"api/guests/{guestId}");
                await OnInitializedAsync();
            }
        }
    }
}